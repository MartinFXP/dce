# setup
configfile: 'config.yaml'
workdir: config['working_directory']


# rule definitions
rule all:
    input:
        expand(
            'plots/{project}/{project}.{pathway}.dce.pdf',
            project=config['projects'], pathway=config['pathways'])


rule download_TCGA_data:
    output:
        data_dir = directory('tcga_data/GDCdata/'),
        hdf5_dname = directory('tcga_data/hdf5_store/')
    script:
        'scripts/tcga_download.R'


rule process_TCGA_data:
    input:
        hdf5_dname = 'tcga_data/hdf5_store/'
    output:
        expression_fname = 'tcga_data/{project}/expression_matrix.csv',
        classification_fname = 'tcga_data/{project}/case_classifications.csv'
    log:
        notebook = 'notebooks/ProcessTCGAData.{project}.ipynb'
    notebook:
        'notebooks/ProcessTCGAData.ipynb'


rule download_KEGG_pathway:
    output:
        xml_fname = 'kegg_data/{pathway}.xml',
        network_fname = 'kegg_data/{pathway}.edgelist.csv.gz',
        plot_fname = 'kegg_data/{pathway}.pdf'
    script:
        'scripts/kegg_download.R'


rule compute_differential_causal_effects:
    input:
        expression_fname = 'tcga_data/{project}/expression_matrix.csv',
        classification_fname = 'tcga_data/{project}/case_classifications.csv',
        network_fname = 'kegg_data/{pathway}.edgelist.csv.gz'
    output:
        dce_fname = 'results/{project}/{project}.{pathway}.dce.RData',
    script:
        'scripts/compute_dce.R'


rule visualize:
    input:
        dce_fname = 'results/{project}/{project}.{pathway}.dce.RData'
    output:
        plot_fname = 'plots/{project}/{project}.{pathway}.dce.pdf'
    script:
        'scripts/visualize.R'
