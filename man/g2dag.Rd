% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{g2dag}
\alias{g2dag}
\title{Graph to DAG}
\usage{
g2dag(g, tc = FALSE)
}
\arguments{
\item{g}{graph as adjacency matrix}

\item{tc}{if TRUE computes the transitive closure}
}
\value{
dag as adjacency matrix
}
\description{
Converts a general graph to a dag with minimum distance to the
original graph. The general idea is to transitively close the graph
to detect cycles and remove them based on the rule "the more outgoing
edges a node has, the more likely it is that incoming edges from a
cycle will be deleted, and vice versa. However, this is too rigorous
and deletes too many edges, which do not lead to a cycle. These
edges are added back in the final step.
}
\examples{
g <- matrix(c(1,0,1,0, 1,1,0,0, 0,1,1,0, 1,1,0,1), 4, 4)
rownames(g) <- colnames(g) <- LETTERS[seq_len(4)]
dag <- g2dag(g)
}
\author{
Ken Adams
}
