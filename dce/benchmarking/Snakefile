configfile: 'config.yaml'
localrules: all, aggregate_replicates


rule all:
    input:
        expand(
            'benchmarks/plots_{varied_param}/',
            varied_param=[e['parameter'] for e in config['benchmarks']])


rule run_benchmark:
    output:
        fname = 'benchmarks/replicates/bench_{varied_param}_{replicate}.csv'
    params:
        benchmark_script = srcdir('main.R')
    resources:
        mem_mb = 5_000
    run:
        import sh

        # select matching config information
        cur = [e for e in config['benchmarks'] if e['parameter'] == wildcards.varied_param]
        assert len(cur) == 1
        cur = cur[0]

        # select methods if needed
        methods_arg = []
        if cur['methods'] is not None:
            methods_arg = ['--methods', ','.join(str(v) for v in cur['methods'])]

        # execute benchmark script
        sh.Rscript(
            params.benchmark_script,
            '--variable', wildcards.varied_param,
            '--values', ','.join(str(v) for v in cur['values']),
            '--replicates', config['script_replicates'],
            '--output', output.fname,
            *methods_arg,
            _fg=True
        )


rule aggregate_replicates:
    input:
        fname_list = expand(
            'benchmarks/replicates/bench_{varied_param}_{replicate}.csv',
            replicate=list(range(config['rule_replicates'])),
            allow_missing=True)
    output:
        fname = 'benchmarks/bench_{varied_param}.csv'
    run:
        import pandas as pd

        df_list = [pd.read_csv(fname) for fname in input.fname_list]
        pd.concat(df_list).to_csv(output.fname, index=False)


rule plot_results:
    input:
        fname = 'benchmarks/bench_{varied_param}.csv'
    output:
        outdir = directory('benchmarks/plots_{varied_param}/')
    params:
        plotting_script = srcdir('plotting.R')
    run:
        import sh

        sh.Rscript(
            params.plotting_script,
            '--input', input.fname,
            '--output', output.outdir,
            _fg=True
        )
